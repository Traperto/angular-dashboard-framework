!function(e,t){"use strict";angular.module("adf",["adf.provider","mm.foundation"]).value("adfTemplatePath","../src/templates/").value("rowTemplate",'<adf-dashboard-row row="row" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="row in column.rows" />').value("columnTemplate",'<adf-dashboard-column column="column" adf-model="adfModel" options="options" edit-mode="editMode" ng-repeat="column in row.columns" />').value("adfVersion","1.0.0"),angular.module("adf").directive("adfDashboardColumn",["$log","$compile","adfTemplatePath","rowTemplate","dashboard",function(e,t,a,i,l){function o(e,t,a){var i=t.widgets;e.$apply(function(){i.splice(a.newIndex,0,i.splice(a.oldIndex,1)[0])})}function n(e,t){for(var a=null,i=0;i<e.widgets.length;i++){var l=e.widgets[i];if(l.wid===t){a=l;break}}return a}function d(e,t){for(var a=null,i=0;i<e.rows.length;i++){for(var l=e.rows[i],o=0;o<l.columns.length;o++){var n=l.columns[o];if(n.cid===t){a=n;break}n.rows&&(a=d(n,t))}if(a)break}return a}function r(e){var t=e.getAttribute("adf-id");return t?parseInt(t):-1}function s(t,a,i,l){var o=r(l.from),s=d(a,o);if(s){var c=r(l.item),u=n(s,c);u?t.$apply(function(){i.widgets.splice(l.newIndex,0,u)}):e.warn("could not find widget with id "+c)}else e.warn("could not find column with id "+o)}function c(e,t,a){e.$apply(function(){t.widgets.splice(a.oldIndex,1)})}function u(e,t,a,i){var l=t[0],n=Sortable.create(l,{group:"widgets",handle:".adf-move",ghostClass:"placeholder",animation:150,onAdd:function(t){s(e,a,i,t)},onRemove:function(t){c(e,i,t)},onUpdate:function(t){o(e,i,t)}});t.on("$destroy",function(){n.destroy()})}return{restrict:"E",replace:!0,scope:{column:"=",editMode:"=",adfModel:"=",options:"="},templateUrl:a+"dashboard-column.html",link:function(e,a){var o=e.column;o.cid||(o.cid=l.id()),angular.isDefined(o.rows)&&angular.isArray(o.rows)?t(i)(e,function(e){a.append(e)}):u(e,a,e.adfModel,o)}}}]),angular.module("adf").directive("adfDashboard",["$rootScope","$log","$modal","dashboard","adfTemplatePath",function(e,t,a,i,l){function o(e){switch(angular.isDefined(e)?e.toLowerCase():null){case"true":case"yes":case"1":return!0;case"false":case"no":case"0":case null:return!1;default:return Boolean(e)}}function n(e,t){if(e.widgets&&e.widgets.length>0)for(var a=e.widgets.shift();a;)t.widgets.push(a),a=e.widgets.shift()}function d(e,t,a){return a=a||0,angular.isDefined(e.rows)&&angular.forEach(e.rows,function(e){angular.forEach(e.columns,function(e){e.widgets||(e.widgets=[]),angular.isDefined(t[a])&&(angular.isDefined(e.rows)||(n(t[a],e),a++)),a=d(e,t,a)})}),a}function r(e,t){return t=t||[],angular.isDefined(e.rows)&&angular.forEach(e.rows,function(e){angular.forEach(e.columns,function(e){t.push(e),r(e,t)})}),t}function s(e,t){var a=r(e),i=0;for(e.rows=angular.copy(t.rows);i<a.length;)i=d(e,a,i)}function c(e){var t={},a=i.widgets[e].config;return a&&(t=angular.copy(a)),t}function u(e){var a=null;if(!angular.isArray(e.rows))return t.error("model does not have any rows"),null;for(var i=0;i<e.rows.length;i++){var l=e.rows[i];if(angular.isArray(l.columns))for(var o=0;o<l.columns.length;o++){var n=l.columns[o];if(!n.rows){a=n;break}}if(a)break}return a}function f(e,a){if(e){var i=u(e);i?(i.widgets||(i.widgets=[]),i.widgets.unshift(a)):t.error("could not find first widget column")}else t.error("model is undefined")}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",editable:"@",maximizable:"@",adfModel:"=",adfWidgetFilter:"="},controller:["$scope",function(o){var n={},d={},r=null,u={},g=o.name;o.$watch("adfModel",function(e,a){(null!==a||null===e&&null===a)&&(n=o.adfModel,r=o.adfWidgetFilter,n&&n.rows||(u=o.structure,d=i.structures[u],d?(n?n.rows=angular.copy(d).rows:n=angular.copy(d),n.structure=u):t.error("could not find structure "+u)),n?(n.title||(n.title="Dashboard"),o.model=n):t.error("could not find or create model"))},!0),o.editMode=!1,o.editClass="",o.toggleEditMode=function(){o.editMode=!o.editMode,o.editMode&&(o.modelCopy=angular.copy(o.adfModel,{})),o.editMode||e.$broadcast("adfDashboardChanged",g,n)},o.cancelEditMode=function(){o.editMode=!1,o.modelCopy=angular.copy(o.modelCopy,o.adfModel)},o.editDashboardDialog=function(){var e=o.$new();e.copy={title:n.title},e.structures=i.structures;var d=a.open({scope:e,templateUrl:l+"dashboard-edit.html",backdrop:"static"});o.changeStructure=function(e,a){t.info("change structure to "+e),s(n,a)},e.closeDialog=function(){n.title=e.copy.title,d.close(),e.$destroy()}},o.addWidgetDialog=function(){var e,t=o.$new(),n=o.model;angular.isFunction(r)?(e={},angular.forEach(i.widgets,function(t,a){r(t,a,n)&&(e[a]=t)})):e=i.widgets,t.widgets=e;var d={scope:t,templateUrl:l+"widget-add.html",backdrop:"static"},s=a.open(d);t.addWidget=function(e){var a={type:e,config:c(e)};f(n,a),s.close(),t.$destroy()},t.closeDialog=function(){s.close(),t.$destroy()}}}],link:function(e,t,a){var i={name:a.name,editable:!0,maximizable:o(a.maximizable),collapsible:o(a.collapsible)};angular.isDefined(a.editable)&&(i.editable=o(a.editable)),e.options=i},templateUrl:l+"dashboard.html"}}]),angular.module("adf.provider",[]).provider("dashboard",function(){var e={},t="",a={},i='<div class="alert alert-danger">{}</div>',l='      <div class="progress progress-striped active">\n        <div class="progress-bar" role="progressbar" style="width: 100%">\n          <span class="sr-only">loading ...</span>\n        </div>\n      </div>';this.widget=function(t,a){var i=angular.extend({reload:!1},a);if(i.edit){var l={reload:!0};angular.extend(l,i.edit),i.edit=l}return e[t]=i,this},this.widgetsPath=function(e){return t=e,this},this.structure=function(e,t){return a[e]=t,this},this.messageTemplate=function(e){return i=e,this},this.loadingTemplate=function(e){return l=e,this},this.$get=function(){var o=0;return{widgets:e,widgetsPath:t,structures:a,messageTemplate:i,loadingTemplate:l,id:function(){return++o}}}}),angular.module("adf").directive("adfDashboardRow",["$compile","adfTemplatePath","columnTemplate",function(e,t,a){return{restrict:"E",replace:!0,scope:{row:"=",adfModel:"=",editMode:"=",options:"="},templateUrl:t+"dashboard-row.html",link:function(t,i){angular.isDefined(t.row.columns)&&angular.isArray(t.row.columns)&&e(a)(t,function(e){i.append(e)})}}}]),angular.module("adf").directive("adfWidgetContent",["$log","$q","$sce","$http","$templateCache","$compile","$controller","$injector","dashboard",function(e,t,a,i,l,o,n,d,r){function s(e){var t=e;return e.indexOf("{widgetsPath}")>=0&&(t=e.replace("{widgetsPath}",r.widgetsPath).replace("//","/"),0===t.indexOf("/")&&(t=t.substring(1))),t}function c(e){var o=t.defer();if(e.template)o.resolve(e.template);else if(e.templateUrl){var n=l.get(e.templateUrl);if(n)o.resolve(n);else{var d=a.getTrustedResourceUrl(s(e.templateUrl));i.get(d).success(function(t){l.put(e.templateUrl,t),o.resolve(t)}).error(function(){o.reject("could not load template")})}}return o.promise}function u(a,i,l){var s=a.model,u=a.content;i.html(r.loadingTemplate);var f=a.$new();s.config||(s.config={}),f.config=s.config;var g={$scope:f,widget:s,config:s.config},p={};return p.$tpl=c(u),u.resolve&&angular.forEach(u.resolve,function(e,t){p[t]=angular.isString(e)?d.get(e):d.invoke(e,e,g)}),t.all(p).then(function(e){angular.extend(e,g);var t=e.$tpl;if(i.html(t),u.controller){var a=n(u.controller,e);u.controllerAs&&(f[u.controllerAs]=a),i.children().data("$ngControllerController",a)}o(i.contents())(f)},function(t){var a="Could not resolve all promises";t&&(a+=": "+t),e.warn(a),i.html(r.messageTemplate.replace(/{}/g,a))}),l&&l.$destroy(),f}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(e,t){var a=u(e,t,null);e.$on("widgetConfigChanged",function(){a=u(e,t,a)}),e.$on("widgetReload",function(){a=u(e,t,a)})}}}]),angular.module("adf").directive("adfWidget",["$log","$modal","dashboard","adfTemplatePath",function(e,t,a,i){function l(t){var i=t.definition;if(i){var l=a.widgets[i.type];if(l){i.title||(i.title=l.title),i.wid||(i.wid=a.id()),t.widget=angular.copy(l);var o=i.config;o?angular.isString(o)&&(o=angular.fromJson(o)):o={},t.config=o,t.isCollapsed=!1}else e.warn("could not find widget "+i.type)}else e.debug("definition not specified, widget was probably removed")}function o(a,l){var o=a.definition;o?(a.close=function(){var e=a.col;if(e){var t=e.widgets.indexOf(o);t>=0&&e.widgets.splice(t,1)}l.remove()},a.reload=function(){a.$broadcast("widgetReload")},a.edit=function(){var e=a.$new(),l={scope:e,templateUrl:i+"widget-edit.html",backdrop:"static"},o=t.open(l);e.closeDialog=function(){o.close(),e.$destroy();var t=a.widget;t.edit&&t.edit.reload&&a.$broadcast("widgetConfigChanged")}}):e.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:i+"widget.html",scope:{definition:"=",col:"=column",editMode:"=",options:"="},controller:["$scope",function(e){e.openFullScreen=function(){var a=e.definition,l=e.$new(),o={scope:l,templateUrl:i+"widget-fullscreen.html",size:a.modalSize||"lg",backdrop:"static",windowClass:a.fullScreen?"dashboard-modal widget-fullscreen":"dashboard-modal"},n=t.open(o);l.closeDialog=function(){n.close(),l.$destroy()}}}],compile:function(){return{pre:l,post:o}}}}]),angular.module("adf").run(["$templateCache",function(e){e.put("../src/templates/dashboard-column.html",'<div adf-id={{column.cid}} class="columns column" ng-class=column.styleClass ng-model=column.widgets> <adf-widget ng-repeat="definition in column.widgets" definition=definition column=column edit-mode=editMode options=options>  </adf-widget></div> '),e.put("../src/templates/dashboard-edit.html",'<a class=close-reveal-modal ng-click=closeDialog() aria-hidden=true aria-label=Close>&#215;</a> <h4 class=modal-title>Dashboard bearbeiten</h4> <form role=form> <div class="row dashboard-edit"> <div class="small-6 columns"> <h5>Titel</h5> <input type=text id=dashboardTitle ng-model=copy.title placeholder="Titel des Dashboards"> </div> <div class="small-6 columns"> <h5>Spaltenstruktur</h5> <div class=radio ng-repeat="(key, structure) in structures"> <input type=radio value={{key}} ng-model=model.structure ng-change="changeStructure(key, structure)"> <label>{{key}}</label> </div> </div> </div> </form>'),e.put("../src/templates/dashboard-row.html","<div class=row ng-class=row.styleClass>  </div> "),e.put("../src/templates/dashboard.html",'<div class=dashboard-container> <div class=row> <div class="columns small-8"><h1>{{model.title}}</h1></div> <div class="columns small-4"> <span style="font-size: 16px" class=pull-right> <a href ng-if=editMode title="Neues Widget hinzufügen" ng-click=addWidgetDialog()> <i class="fa fa-plus"></i> </a> <a href ng-if=editMode title="Dashboard bearbeiten" ng-click=editDashboardDialog()> <i class="fa fa-cog"></i> </a> <a href ng-if=options.editable title="{{editMode ? \'speichern\' : \'Bearbeitungsmodus aktivieren\'}}" ng-click=toggleEditMode()> <i class=fa x-ng-class="{\'fa-edit\' : !editMode, \'fa-save\' : editMode}"></i> </a> <a href ng-if=editMode title="Änderungen verwerfen" ng-click=cancelEditMode()> <i class="fa fa-repeat adf-flip"></i> </a> </span> </div> </div> <div class=row> <div class=columns> <div class=dashboard x-ng-class="{\'edit\' : editMode}"> <adf-dashboard-row row=row adf-model=model options=options ng-repeat="row in model.rows" edit-mode=editMode> </adf-dashboard-row></div> </div> </div> </div> '),e.put("../src/templates/widget-add.html",'<div class=modal-header> <a class=close-reveal-modal ng-click=closeDialog() aria-hidden=true aria-label=Close>&#215;</a> <h4 class=modal-title>Widget hinzufügen</h4> </div> <div class=modal-body> <div style="display: inline-block;"> <dl class=dl-horizontal> <dt ng-repeat-start="(key, widget) in widgets"> <a href ng-click=addWidget(key)> {{widget.title}} </a> </dt> <dd ng-repeat-end ng-if=widget.description> {{widget.description}} </dd> </dl> </div> </div> '),e.put("../src/templates/widget-edit.html",'<div class=modal-header> <a class=close-reveal-modal ng-click=closeDialog() aria-hidden=true aria-label=Close>&#215;</a> <h4 class=modal-title>{{widget.title}}</h4> </div> <div class=modal-body> <form> <div class=row> <div class="small-2 columns"> <label for=widgetTitle class="inline widgetTitle">Titel</label> </div> <div class="small-10 columns"> <input type=text class=form-control id=widgetTitle ng-model=definition.title> </div> </div> </form> <div ng-if=widget.edit class=widget-settings> <adf-widget-content model=definition content=widget.edit> </adf-widget-content></div> </div>'),e.put("../src/templates/widget-fullscreen.html","<a class=close-reveal-modal ng-click=closeDialog() aria-hidden=true aria-label=Close>&#215;</a> <div class=modal-header> <h4 class=modal-title>{{definition.title}}</h4> </div> <div class=modal-body> <adf-widget-content model=definition content=widget> </adf-widget-content></div>"),e.put("../src/templates/widget.html",'<div adf-id={{definition.wid}} class="widget panel panel-default"> <div class="panel-heading clearfix"> <h3 class=panel-title ng-class="editMode ? \'adf-move\' : \'\'"> {{definition.title}} <span class=pull-right> <a href title="Daten neu laden" ng-if=widget.reload ng-click=reload()> <i class="fa fa-refresh"></i> </a>  <a href title="zu klappen" ng-show="options.collapsible && !isCollapsed" ng-click="isCollapsed = !isCollapsed"> <i class="fa fa-minus"></i> </a>  <a href title="auf klappen" ng-show="options.collapsible && isCollapsed" ng-click="isCollapsed = !isCollapsed"> <i class="fa fa-plus"></i> </a>  <a href title=konfigurieren ng-click=edit() ng-if=editMode> <i class="fa fa-cog"></i> </a> <a href title="fullscreen widget" ng-click=openFullScreen() ng-show=options.maximizable> <i class="fa fa-arrows"></i> </a>  <a href title=löschen ng-click=close() ng-if=editMode> <i class="fa fa-remove"></i> </a> </span> </h3> </div> <div class=panel-body ng-show="!options.collapsible || (options.collapsible && !isCollapsed)"> <adf-widget-content model=definition content=widget> </adf-widget-content></div> </div> ')}])}(window);
//# sourceMappingURL=angular-dashboard-framework.min.js.map